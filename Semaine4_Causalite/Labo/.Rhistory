geom_bar(aes(x = no_media_cat, fill = beat_burnfood_cat), position = "dodge")
ggplot(dhs_ipv) +
geom_bar(aes(x = no_media_cat, fill = beat_burnfood_cat), position = "dodge") +
ggtitle("Association entre ouverture aux médias et acceptation de la violence conjugale") +
xlab("Type de pays selon l'ouverture aux médias") +
ylab("Effectif") +
theme_bw()
ggplot(dhs_ipv) +
geom_boxplot(aes(x = no_media_cat, y = beat_burnfood, color = no_media_cat)) +
ggtitle("Association entre ouverture aux médias et acceptation de la violence conjugale") +
xlab("Type de pays selon l'ouverture aux médias") +
ylab("% qui estime qu'une femme doit être battue (beat_burnfood)")
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point()
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point(aes(color = region))
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point(color = region)
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point(aes(color = region))
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point(aes(color = "blue"))
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point(color = "blue")
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point(color = "brown")
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point(color = "yellow")
letters <- letters
letters
couleur <- colors()
couleur
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point(color = "darkorange4")
couleur
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point(aes(color = region))
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point(aes(color = region)) +
geom_smooth(aes(color = region), method = lm, se = FALSE,  formula = y ~ x)
data("resume", package = "qss")
library(qss)
install.packages("qss")
install.packages("qss")
View(resume)
freq(resume$race)
# resume <- read_csv("resume.csv")        # What you will do to import the data (remember your directory)
head(resume)
freq(resume$sex)
freq(resume$race)
freq(resume$call)
discrimination <- ctable(resume$race, resume$call)
discrimination
ctable(resume$race, resume$sex)
resume_femme <-
resume %>%
filter(sex == "female")
View(resume_femme)
resume_homme <-
resume %>%
filter(sex == "male")
View(resume_homme)
discrimination_femme <- ctable(resume_femme$race, resume_femme$call, "r")
discrimination_femme
9.9 - 6.6
discrimination_homme <- ctable(resume_homme$race, resume_homme$call)
discrimination_homme
data("minwage", package = "qss")
View(minwage)
rm(list = ls())
library(tidyverse)
library(summarytools)
data("minwage", package = "qss")
View(minwage)
head(minwage)
minwage <-
minwage %>%
mutate(state = if_else(location == "PA", "PA", "NJ"))
View(minwage)
# Calcul de la variable dépendante: proportion fulltime
minwage <-
minwage %>%
mutate(totalAfter = fullAfter + partAfter,
fullPropAfter = fullAfter / totalAfter)
View(minwage)
full_prop_by_state <-
minwage %>%
group_by(state) %>%
summarise(fullPropAfter = mean(fullPropAfter))
full_prop_by_state
diff1 <- full_prop_by_state[[1, 2]] - full_prop_by_state[[2, 2]]
diff1
full_prop_by_state
pivot_wider(full_prop_by_state, names_from = state, values_from = fullPropAfter) %>%
mutate(diff = NJ - PA)
pivot_wider(full_prop_by_state, names_from = state, values_from = fullPropAfter)
pivot_wider(full_prop_by_state, names_from = state, values_from = fullPropAfter) %>%
mutate(diff = NJ - PA)
prop_chain <-
minwage %>%
group_by(state) %>%
count(chain) %>%
mutate(prop_chain = n/sum(n))
prop_chain
full_prop_by_state_chain <-
minwage %>%
group_by(state, chain) %>%
summarise(fullPropAfter = mean(fullPropAfter))
full_prop_by_state_chain
pivot_wider(full_prop_by_state_chain, names_from = state, values_from = fullPropAfter) %>%
mutate(diff = NJ - PA)
minwage <-
minwage %>%
mutate(fullPropBefore = fullBefore / (fullBefore + partBefore))
View(minwage)
avant_apres <-
minwage %>%
filter(state == "NJ") %>%
summarise(PropBefore = mean(fullPropBefore),
PropAfter = mean(fullPropAfter),
diff_bef_aft_NJ = mean(fullPropAfter) - mean(fullPropBefore))
avant_apres
did <-
minwage %>%
group_by(state) %>%
summarise(diff = mean(fullPropAfter) - mean(fullPropBefore))
did
did$diff[1] - did$diff[2]
did
did_direct <-
minwage %>%
group_by(state) %>%
summarise(diff = mean(fullPropAfter) - mean(fullPropBefore))%>%
pivot_wider(names_from =state, values_from = diff) %>%
mutate(diff_in_diff = NJ - PA)
did_direct
minwage %>%
group_by(state) %>%
summarise_at(vars(fullPropAfter, fullPropBefore), mean)
minwage %>%
group_by(state) %>%
summarise_at(vars(fullPropAfter, fullPropBefore), mean) %>%
pivot_longer(cols = c("fullPropAfter", "fullPropBefore"), names_to = "period", values_to = "fullProp")
full_prop_by_state <-
minwage %>%
group_by(state) %>%
summarise_at(vars(fullPropAfter, fullPropBefore), mean) %>%
pivot_longer(cols = c("fullPropAfter", "fullPropBefore"), names_to = "period", values_to = "fullProp") %>%
mutate(period = recode(period, fullPropAfter = 1, fullPropBefore = 0))
full_prop_by_state
ggplot(full_prop_by_state) +
geom_point(aes(x = period, y = fullProp, color = state)) +
geom_line(aes(x = period, y = fullProp, color = state)) +
scale_x_continuous(breaks = c(0, 1), labels = c("Before", "After"))
getwd()
library(tidyverse)
dhs_ipv <- read_csv("../dhs_ipv.csv")
library(tidyverse)
library(summarytools)
dhs_ipv <- read_csv("../Data/dhs_ipv.csv")
dhs_ipv <-
dhs_ipv %>%
mutate(beat_burnfood_cat = factor(ntile(beat_burnfood, 4),
labels = c('Très faible', 'Faible', 'Élevé', 'Très élevé')),
beat_goesout_cat = factor(ntile(beat_goesout, 4),
labels = c('Très faible', 'Faible', 'Élevé', 'Très élevé')),
no_media_cat = factor(ntile(no_media, 3), labels = c('Riche', 'Moyen', 'Pauvre')))
summary(dhs_ipv)
ggplot(dhs_ipv) +
geom_bar(aes(x = no_media_cat, fill = beat_burnfood_cat), position = "dodge") +
ggtitle("Association entre ouverture aux médias et acceptation de la violence conjugale") +
xlab("Type de pays selon l'ouverture aux médias") +
ylab("Effectif") +
theme_bw()
ggplot(dhs_ipv %>% !is.na(dhs_ipv)) +
geom_bar(aes(x = no_media_cat, fill = beat_burnfood_cat), position = "dodge") +
ggtitle("Association entre ouverture aux médias et acceptation de la violence conjugale") +
xlab("Type de pays selon l'ouverture aux médias") +
ylab("Effectif") +
theme_bw()
ggplot(dhs_ipv %>% !is.na(dhs_ipv$beat_burnfood_cat)) +
geom_bar(aes(x = no_media_cat, fill = beat_burnfood_cat), position = "dodge") +
ggtitle("Association entre ouverture aux médias et acceptation de la violence conjugale") +
xlab("Type de pays selon l'ouverture aux médias") +
ylab("Effectif") +
theme_bw()
ggplot(dhs_ipv %>% filter(!is.na(dhs_ipv$beat_burnfood_cat))) +
geom_bar(aes(x = no_media_cat, fill = beat_burnfood_cat), position = "dodge") +
ggtitle("Association entre ouverture aux médias et acceptation de la violence conjugale") +
xlab("Type de pays selon l'ouverture aux médias") +
ylab("Effectif") +
theme_bw()
ggplot(dhs_ipv %>% filter(drop_na(dhs_ipv))) +
geom_bar(aes(x = no_media_cat, fill = beat_burnfood_cat), position = "dodge") +
ggtitle("Association entre ouverture aux médias et acceptation de la violence conjugale") +
xlab("Type de pays selon l'ouverture aux médias") +
ylab("Effectif") +
theme_bw()
ggplot(dhs_ipv %>% drop_na(dhs_ipv)) +
geom_bar(aes(x = no_media_cat, fill = beat_burnfood_cat), position = "dodge") +
ggtitle("Association entre ouverture aux médias et acceptation de la violence conjugale") +
xlab("Type de pays selon l'ouverture aux médias") +
ylab("Effectif") +
theme_bw()
ggplot(dhs_ipv %>% drop_na()) +
geom_bar(aes(x = no_media_cat, fill = beat_burnfood_cat), position = "dodge") +
ggtitle("Association entre ouverture aux médias et acceptation de la violence conjugale") +
xlab("Type de pays selon l'ouverture aux médias") +
ylab("Effectif") +
theme_bw()
ggplot(dhs_ipv %>% drop_na()) +
geom_bar(aes(x = no_media_cat, fill = beat_burnfood_cat), position = "fill") +
ggtitle("Association entre ouverture aux médias et acceptation de la violence conjugale") +
xlab("Type de pays selon l'ouverture aux médias") +
ylab("Effectif") +
theme_bw()
ggplot(dhs_ipv) +
geom_boxplot(aes(x = no_media_cat, y = beat_burnfood, color = no_media_cat)) +
ggtitle("Association entre ouverture aux médias et acceptation de la violence conjugale") +
xlab("Type de pays selon l'ouverture aux médias") +
ylab("% qui estime qu'une femme doit être battue (beat_burnfood)")
ggplot(dhs_ipv %>% drop_na()) +
geom_boxplot(aes(x = no_media_cat, y = beat_burnfood, color = no_media_cat)) +
ggtitle("Association entre ouverture aux médias et acceptation de la violence conjugale") +
xlab("Type de pays selon l'ouverture aux médias") +
ylab("% qui estime qu'une femme doit être battue (beat_burnfood)")
ggplot(dhs_ipv %>% drop_na()) +
geom_boxplot(aes(x = no_media_cat, y = beat_burnfood, color = no_media_cat)) +
ggtitle("Association entre ouverture aux médias et acceptation de la violence conjugale") +
xlab("Type de pays selon l'ouverture aux médias") +
ylab("% qui estime qu'une femme doit être battue (beat_burnfood)") +
theme(legend.position = "none") +
theme_bw()
ggplot(dhs_ipv %>% drop_na()) +
geom_boxplot(aes(x = no_media_cat, y = beat_burnfood, color = no_media_cat)) +
ggtitle("Association entre ouverture aux médias et acceptation de la violence conjugale") +
xlab("Type de pays selon l'ouverture aux médias") +
ylab("% qui estime qu'une femme doit être battue (beat_burnfood)") +
theme_bw() +
theme(legend.position = "none")
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point()
colors()
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point(aes(color = region)) +
geom_smooth(aes(color = region), method = lm, se = FALSE,  formula = y ~ x)
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point(aes(color = region)) +
geom_smooth(method = lm, se = FALSE,  formula = y ~ x)
cbbPalette <- c("#000000", "#E69F00", "#CC79A7", "#56B4E9", "#F0E442", "#D55E00", "#0072B2", "#009E73")
ggplot(dhs_ipv, aes(x = no_media, y = beat_burnfood)) +
geom_point(aes(color = region)) +
geom_smooth(aes(color = region), method = lm, se = FALSE,  formula = y ~ x) +
scale_colour_manual(values = cbbPalette)
rm(list = ls())
library(qss)
install.packages("testthat")
install.packages("testthat")
install.packages("testthat")
library(qss)
data("resume", package = "qss")
# resume <- read_csv("resume.csv")        # What you will do to import the data (remember your directory)
head(resume)
freq(resume$sex)
library(summarytools)
freq(resume$sex)
freq(resume$race)
freq(resume$call)
discrimination <- ctable(resume$race, resume$call, "r")
discrimination
ctable(resume$race, resume$sex)
resume_femme <-
resume %>%
filter(sex == "female")
library(tidyverse)
resume_femme <-
resume %>%
filter(sex == "female")
resume_homme <-
resume %>%
filter(sex == "male")
discrimination_femme <- ctable(resume_femme$race, resume_femme$call, "r")
discrimination_femme
resume_femme <-
resume %>%
filter(sex == "female")
resume_homme <-
resume %>%
filter(sex == "male")
discrimination_femme <- ctable(resume_femme$race, resume_femme$call, "r")
discrimination_femme
discrimination_homme <- ctable(resume_homme$race, resume_homme$call)
discrimination_homme
knitr::include_graphics("../Images/minimum-wage.jpg")
rm(list = ls())
library(tidyverse)
library(summarytools)
data("minwage", package = "qss")
minwage <-
minwage %>%
mutate(state = if_else(location == "PA", "PA", "NJ"))
minwage <-
minwage %>%
mutate(totalAfter = fullAfter + partAfter,
fullPropAfter = fullAfter / totalAfter)
full_prop_by_state <-
minwage %>%
group_by(state) %>%
summarise(fullPropAfter = mean(fullPropAfter))
full_prop_by_state
wage_before_after <-
minwage %>%
group_by(state) %>%
summarise(mean_wage_after = mean(wageAfter),
mean_wage_before = mean(wageBefore))
wage_before_after
minwage <-
minwage %>%
mutate(totalAfter = fullAfter + partAfter,
fullPropAfter = fullAfter / totalAfter)
full_prop_by_state
diff1 <- full_prop_by_state[[1, 2]] - full_prop_by_state[[2, 2]]
diff1
pivot_wider(full_prop_by_state, names_from = state, values_from = fullPropAfter) %>%
mutate(diff = NJ - PA)
full_prop_by_state_pivot %>%
full_prop_by_state %>%
pivot_wider(names_from = state, values_from = fullPropAfter)
full_prop_by_state_pivot %>%
full_prop_by_state %>%
pivot_wider(data = ., names_from = state, values_from = fullPropAfter)
full_prop_by_state
full_prop_by_state_pivot <-
full_prop_by_state %>%
pivot_wider(data = ., names_from = state, values_from = fullPropAfter)
full_prop_by_state_pivot
full_prop_by_state_pivot <-
full_prop_by_state %>%
pivot_wider(names_from = state, values_from = fullPropAfter)
full_prop_by_state_pivot <-
full_prop_by_state %>%
pivot_wider(names_from = state, values_from = fullPropAfter)
View(full_prop_by_state_pivot)
full_prop_by_state_pivot <-
full_prop_by_state %>%
pivot_wider(names_from = state, values_from = fullPropAfter) %>%
mutate(diff1 = NJ - PA)
prop_chain <-
minwage %>%
group_by(state) %>%
count(chain)
minwage %>%
group_by(state) %>%
count(chain)
prop_chain
prop_chain <-
minwage %>%
group_by(state) %>%
count(chain) %>%
mutate(prop_chain = n/sum(n))
prop_chain
ggplot(prop_chain) +
geom_point(aes(x = chain, y = prop_chain, color = state)) +
coord_flip()
full_prop_by_state_chain <-
minwage %>%
group_by(state, chain) %>%
summarise(fullPropAfter = mean(fullPropAfter))
full_prop_by_state_chain
full_prop_by_state_chain_pivot <-
full_prop_by_state_chain %>%
pivot_wider(names_from = state, values_from = fullPropAfter) %>%
mutate(diff1 = NJ - PA)
full_prop_by_state_chain_pivot
ggplot(full_prop_by_state_chain) +
geom_point(aes(x = chain, y = fullPropAfter, color = state)) +
coord_flip()
full_prop_by_state_chain_pivot
minwage <-
minwage %>%
mutate(fullPropBefore = fullBefore / (fullBefore + partBefore))
avant_apres <-
minwage %>%
filter(state == "NJ") %>%
summarise(PropBefore = mean(fullPropBefore),
PropAfter = mean(fullPropAfter),
diff_bef_aft_NJ = mean(fullPropAfter) - mean(fullPropBefore))
avant_apres
did <-
minwage %>%
group_by(state) %>%
summarise(diff = mean(fullPropAfter) - mean(fullPropBefore))
did
did$diff[1] - did$diff[2]
did_direct <-
minwage %>%
group_by(state) %>%
summarise(diff = mean(fullPropAfter) - mean(fullPropBefore))%>%
pivot_wider(names_from =state, values_from = diff) %>%
mutate(diff_in_diff = NJ - PA)
did_direct
full_prop_by_state <-
minwage %>%
group_by(state) %>%
summarise_at(vars(fullPropAfter, fullPropBefore), mean) %>%
pivot_longer(cols = c("fullPropAfter", "fullPropBefore"), names_to = "period", values_to = "fullProp") %>%
mutate(period = recode(period, fullPropAfter = 1, fullPropBefore = 0))
full_prop_by_state
ggplot(full_prop_by_state) +
geom_point(aes(x = period, y = fullProp, color = state)) +
geom_line(aes(x = period, y = fullProp, color = state)) +
scale_x_continuous(breaks = c(0, 1), labels = c("Before", "After"))
knitr::include_graphics("../Images/minwage_dd.jpg")
knitr::include_graphics("../Images/satt.jpg")
knitr::include_graphics("../Images/satt.jpg")
rm(list = ls())
library(qss)
library(summarytools)
library(tidyverse)
data("resume", package = "qss")
View(resume)
freq(resume$sex)
freq(resume$race)
freq(resume$call)
discrimination <- ctable(resume$race, resume$call, "r")
discrimination
ctable(resume$race, resume$sex)
resume_femme <-
resume %>%
filter(sex == "female")
resume_homme <-
resume %>%
filter(sex == "male")
discrimination_femme <- ctable(resume_femme$race, resume_femme$call, "r")
discrimination_femme
discrimination_homme <- ctable(resume_homme$race, resume_homme$call)
discrimination_homme
rm(list = ls())
library(tidyverse)
library(summarytools)
data("minwage", package = "qss")
View(minwage)
minwage <-
minwage %>%
mutate(state = if_else(location == "PA", "PA", "NJ"))
wage_before_after <-
minwage %>%
group_by(state) %>%
summarise(mean_wage_after = mean(wageAfter),
mean_wage_before = mean(wageBefore))
wage_before_after
minwage <-
minwage %>%
mutate(totalAfter = fullAfter + partAfter,
fullPropAfter = fullAfter / totalAfter)
full_prop_by_state <-
minwage %>%
group_by(state) %>%
summarise(fullPropAfter = mean(fullPropAfter))
full_prop_by_state
minwage %>%
group_by(state) %>%
count(chain)
prop_chain <-
minwage %>%
group_by(state) %>%
count(chain) %>%
mutate(prop_chain = n/sum(n))
prop_chain
ggplot(prop_chain) +
geom_point(aes(x = chain, y = prop_chain, color = state)) +
coord_flip()
full_prop_by_state_chain <-
minwage %>%
group_by(state, chain) %>%
summarise(fullPropAfter = mean(fullPropAfter))
full_prop_by_state_chain
minwage <-
minwage %>%
mutate(fullPropBefore = fullBefore / (fullBefore + partBefore))
avant_apres <-
minwage %>%
filter(state == "NJ") %>%
summarise(PropBefore = mean(fullPropBefore),
PropAfter = mean(fullPropAfter),
diff_bef_aft_NJ = mean(fullPropAfter) - mean(fullPropBefore))
avant_apres
did <-
minwage %>%
group_by(state) %>%
summarise(diff = mean(fullPropAfter) - mean(fullPropBefore))
did
did$diff[1] - did$diff[2]
minwage %>%
group_by(state) %>%
summarise(diff = mean(fullPropAfter) - mean(fullPropBefore))
minwage %>%
group_by(state) %>%
summarise(diff = mean(fullPropAfter) - mean(fullPropBefore))%>%
pivot_wider(names_from =state, values_from = diff)
minwage %>%
group_by(state) %>%
summarise(diff = mean(fullPropAfter) - mean(fullPropBefore))%>%
pivot_wider(names_from =state, values_from = diff) %>%
mutate(diff_in_diff = NJ - PA)
did_direct <-
minwage %>%
group_by(state) %>%
summarise(diff = mean(fullPropAfter) - mean(fullPropBefore))%>%
pivot_wider(names_from =state, values_from = diff) %>%
mutate(diff_in_diff = NJ - PA)
did_direct
